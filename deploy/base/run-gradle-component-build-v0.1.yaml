apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: run-gradle-component-build
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/displayName: Run Gradle component build
    tekton.dev/categories: Build Tools
    tekton.dev/tags: build-tool
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le"
spec:
  description: >-
    This Task can be used to run a Gradle build of a component that will be deployed to the sidecar.
  workspaces:
    - name: source
      description: The workspace consisting of the gradle project.
    - name: maven-settings
      description: >-
        The workspace consisting of the custom gradle settings
        provided by the user.
  results:
    - name: contaminants
      description: Any community GAVs that have ended up in the final output.
  params:
    - name: URL
      type: string
    - name: TAG
      type: string
    - name: JAVA_HOME
      description: Java home.
      type: string
      default: ""
    - name: TOOL_VERSION
      description: Gradle version.
      type: string
      default: ""
    - name: GRADLE_MANIPULATOR_ARGS
      description: Gradle manipulator arguments.
      type: string
      default: "-DdependencySource=NONE -DignoreUnresolvableDependencies=true -DpluginRemoval=ALL -DversionModification=false"
    - name: IMAGE
      description: Gradle base image.
      type: string
      default: quay.io/dwalluck/gradle:1@sha256:eaf55b0ad7a9a82874e2c3b7ff4c2c055286341eb6d2dfe117202a968ff70f23
    - name: GOALS
      description: 'The gradle tasks to run (default: build publish)'
      type: array
      default:
        - -Prelease
        - build
        - publish
    - name: MAVEN_MIRROR_URL
      description: The Maven repository mirror url
      type: string
      default: "http://localhost:2000/maven2"
    - name: SERVER_USER
      description: The username for the server
      type: string
      default: ""
    - name: SERVER_PASSWORD
      description: The password for the server
      type: string
      default: ""
    - name: PROXY_USER
      description: The username for the proxy server
      type: string
      default: ""
    - name: PROXY_PASSWORD
      description: The password for the proxy server
      type: string
      default: ""
    - name: PROXY_PORT
      description: Port number for the proxy server
      type: string
      default: ""
    - name: PROXY_HOST
      description: Proxy server Host
      type: string
      default: ""
    - name: PROXY_NON_PROXY_HOSTS
      description: Non proxy server host
      type: string
      default: ""
    - name: PROXY_PROTOCOL
      description: Protocol for the proxy ie http or https
      type: string
      default: "http"
    - name: CONTEXT_DIR
      description: The directory containing build.gradle
      type: string
      default: "."
    - name: ENFORCE_VERSION
      type: string
      description: >-
        Some builds are incorrectly tagged with a snapshot version, rather
        than the release version. If this is set then the version will be
        updated to the release version before the build.
      default: ""
    - name: IGNORED_ARTIFACTS
      type: string
      description: >-
        Comma-separated list of artifact names that should not be deployed or checked for contaminants.
      default: ""
  steps:
    - name: git-clone
      image: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.21.0"
      resources:
        requests:
          memory: "128Mi"
          cpu: "10m"
        limits:
          memory: "512Mi"
          cpu: "300m"
      args:
        - -path=$(workspaces.source.path)
        - -url=$(params.URL)
        - -revision=$(params.TAG)
    - name: maven-settings
      image: "registry.access.redhat.com/ubi8/ubi:8.5"
      securityContext:
        runAsUser: 0
      resources:
        requests:
          memory: "128Mi"
          cpu: "10m"
        limits:
          memory: "512Mi"
          cpu: "300m"
      env:
        - name: GRADLE_USER_HOME
          value: $(workspaces.maven-settings.path)/.gradle
      script: |
        #!/usr/bin/env bash

        mkdir -p ${GRADLE_USER_HOME}
        cat > ${GRADLE_USER_HOME}/gradle.properties << EOF
        org.gradle.caching=false
        # This prevents the daemon from running (which is unnecessary in one-off builds) and increases the memory allocation
        org.gradle.daemon=false
        # For Spring/Nebula Release Plugins
        release.useLastTag=true

        # Increase timeouts
        systemProp.org.gradle.internal.http.connectionTimeout=600000
        systemProp.org.gradle.internal.http.socketTimeout=600000
        systemProp.http.socketTimeout=600000
        systemProp.http.connectionTimeout=600000

        # Proxy settings <https://docs.gradle.org/current/userguide/build_environment.html#sec:accessing_the_web_via_a_proxy>
        systemProp.http.proxyHost=$(params.PROXY_HOST)
        systemProp.http.proxyPort=$(params.PROXY_PORT)
        systemProp.http.proxyUser=$(params.PROXY_USER)
        systemProp.http.proxyPassword=$(params.PROXY_PASSWORD)
        systemProp.http.nonProxyHosts=$(params.PROXY_NON_PROXY_HOSTS)
        EOF
        cat > ${GRADLE_USER_HOME}/init.gradle << EOF
        import org.gradle.util.VersionNumber

        allprojects {
            buildscript {
                repositories {
                    mavenLocal()
                    maven {
                        name "hacbs-mvn"
                        url "$(params.MAVEN_MIRROR_URL)"
                        credentials {
                            username "$(params.SERVER_USER)"
                            password "$(params.SERVER_PASSWORD)"
                        }
                        //allowInsecureProtocol = true
                    }
                    gradlePluginPortal()
                }
            }
            repositories {
                mavenLocal()
                maven {
                    name "hacbs-mvn"
                    url "$(params.MAVEN_MIRROR_URL)"
                    credentials {
                        username "$(params.SERVER_USER)"
                        password "$(params.SERVER_PASSWORD)"
                    }
                    //allowInsecureProtocol = true
                }
                gradlePluginPortal()
            }
        }

        settingsEvaluated { settings ->
            settings.pluginManagement {
                repositories {
                    mavenLocal()
                    maven {
                        name "hacbs-mvn"
                        url "$(params.MAVEN_MIRROR_URL)"
                        credentials {
                            username "$(params.SERVER_USER)"
                            password "$(params.SERVER_PASSWORD)"
                        }
                        //allowInsecureProtocol = true
                    }
                    gradlePluginPortal()
                }
            }
        }
        EOF

        # fix-permissions-for-builder
        chown 1001:1001 -R $(workspaces.source.path)
    - name: gradle-tasks
      image: $(params.IMAGE)
      securityContext:
        runAsUser: 0
      env:
        - name: GRADLE_USER_HOME
          value: $(workspaces.maven-settings.path)/.gradle
      workingDir: $(workspaces.source.path)/$(params.CONTEXT_DIR)
      args: [ "$(params.GOALS[*])" ]
      script: |
        #!/usr/bin/env bash

        echo "@=$@"

        if [ -z "$(params.JAVA_HOME)" ]; then
            echo "JAVA_HOME has not been set" >&2
            exit 1
        fi

        export JAVA_HOME=$(params.JAVA_HOME)
        echo "JAVA_HOME=${JAVA_HOME}"
        export PATH="${JAVA_HOME}/bin:${PATH}"

        if [ -z "${TOOL_VERSION}" ]; then
            echo "TOOL_VERSION has not been set" >&2
            exit 1
        fi

        TOOL_VERSION="$(params.TOOL_VERSION)"
        export GRADLE_HOME="/opt/gradle-${TOOL_VERSION}"
        echo "GRADLE_HOME=${GRADLE_HOME}"
        export PATH="${GRADLE_HOME}/bin:${PATH}"
        case "${TOOL_VERSION}" in
            7.*)
                sed -i -e 's|//allowInsecureProtocol|allowInsecureProtocol|g' ${GRADLE_USER_HOME}/init.gradle
                ;;
        esac

        export LANG=en_US.UTF-8
        export LC_ALL=en_US.UTF-8

        if [ -n "$(params.ENFORCE_VERSION)" ]; then
            gradle-manipulator -l "${GRADLE_HOME}" $(params.GRADLE_MANIPULATOR_ARGS) -DversionOverride=$(params.ENFORCE_VERSION) generateAlignmentMetadata || exit 1
        else
            gradle-manipulator -l "${GRADLE_HOME}" $(params.GRADLE_MANIPULATOR_ARGS) generateAlignmentMetadata || exit 1
        fi

        gradle -DAProxDeployUrl=file:$(workspaces.source.path)/hacbs-jvm-deployment-repo $@ || exit 1

        # fix-permissions-for-builder
        chown 1001:1001 -R $(workspaces.source.path)
    - name: deploy-and-check-for-contaminates
      image: "registry.access.redhat.com/ubi8/ubi:8.5"
      securityContext:
        runAsUser: 0
      script: |
        tar -cvvzf $(workspaces.source.path)/hacbs-jvm-deployment-repo.tar.gz -C $(workspaces.source.path)/hacbs-jvm-deployment-repo .
        curl --verbose --data-binary @$(workspaces.source.path)/hacbs-jvm-deployment-repo.tar.gz http://localhost:2000/deploy

        curl --verbose --fail http://localhost:2000/deploy/result -o $(results.contaminants.path)
        cat $(workspaces.maven-settings.path)/sidecar.log
      resources:
        requests:
          memory: "128Mi"
          cpu: "10m"
        limits:
          memory: "512Mi"
          cpu: "300m"
  sidecars:
    - image: hacbs-jvm-sidecar
      securityContext:
        runAsUser: 0
      imagePullPolicy: Always
      env:
        - name: QUARKUS_REST_CLIENT_CACHE_SERVICE_URL
          value: "http://hacbs-jvm-cache"
        - name: QUARKUS_LOG_FILE_ENABLE
          value: "true"
        - name: QUARKUS_LOG_FILE_PATH
          value: "$(workspaces.maven-settings.path)/sidecar.log"
        - name: IGNORED_ARTIFACTS
          value: $(params.IGNORED_ARTIFACTS)
        - name: QUARKUS_VERTX_EVENT_LOOPS_POOL_SIZE
          value: "2"
        - name: QUARKUS_THREAD_POOL_MAX_THREADS
          value: "4"
      name: proxy
      volumeMounts:
        - name: $(workspaces.maven-settings.volume)
          mountPath: $(workspaces.maven-settings.path)
      livenessProbe:
        httpGet:
          path: /q/health/live
          port: 2000
        initialDelaySeconds: 1
        periodSeconds: 3
      readinessProbe:
        httpGet:
          path: /q/health/ready
          port: 2000
        initialDelaySeconds: 1
        periodSeconds: 3
      resources:
        requests:
          memory: "128Mi"
          cpu: "250m"
        limits:
          memory: "512Mi"
          cpu: "500m"
